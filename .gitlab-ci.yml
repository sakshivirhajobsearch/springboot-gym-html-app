stages:
  - build
  - test
  - docker

# Build JAR using Maven
build_job:
  stage: build
  image: maven:3.8.7-eclipse-temurin-17
  script:
    - mvn clean package -DskipTests
  artifacts:
    paths:
      - target/*.jar

# Run unit tests
test_job:
  stage: test
  image: maven:3.8.7-eclipse-temurin-17
  script:
    - mvn test

# Build and push Docker image
docker_build_push:
  stage: docker
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
  script:
    - docker build -t "$DOCKER_USERNAME/springboot-gym-html-app" .
    - docker push "$DOCKER_USERNAME/springboot-gym-html-app"

# Validate Docker image by running container and curl test
docker_validate:
  stage: docker
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_TLS_CERTDIR: ""
  script:
    - docker rm -f gym-app || true
    - docker run -d -p 8080:8080 --name gym-app "$DOCKER_USERNAME/springboot-gym-html-app"
    - sleep 15
    - curl --fail http://localhost:8080 || (docker logs gym-app && exit 1)
