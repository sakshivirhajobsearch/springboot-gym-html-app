name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build_and_docker:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven

    - name: Run Unit Tests
      run: mvn test

    - name: Build JAR with Maven
      run: mvn clean package -DskipTests

    - name: Upload JAR Artifact
      uses: actions/upload-artifact@v3
      with:
        name: springboot-app
        path: target/*.jar

    - name: Set Docker image tag
      id: vars
      run: echo "TAG=${GITHUB_SHA::7}" >> $GITHUB_ENV

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/springboot-gym-html-app:${TAG} .
        docker push ${{ secrets.DOCKER_USERNAME }}/springboot-gym-html-app:${TAG}

    - name: Run container for validation (self-hosted only)
      if: runner.os == 'Linux'
      run: |
        docker rm -f gym-app || true
        docker run -d -p 8080:8080 --name gym-app ${{ secrets.DOCKER_USERNAME }}/springboot-gym-html-app:${TAG}
        for i in {1..10}; do
          if curl --fail http://localhost:8080; then
            echo "App is up!"
            exit 0
          else
            echo "Waiting for app..."
            sleep 3
          fi
        done
        echo "App not reachable"
        docker logs gym-app
        exit 1
